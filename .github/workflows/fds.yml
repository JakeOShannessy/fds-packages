on: [push, pull_request]

name: FDS

jobs:
  build-rpm:
    name: Build RPM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container:
          - "fedora:36"
          # - "rockylinux:9"
          # - "rockylinux:8"
        fds-version:
          - "5.5.3"
          - "6.1.2"
          - "6.2.0"
          - "6.3.0"
          - "6.3.1"
          - "6.3.2"
          - "6.4.0"
          - "6.5.0"
          - "6.5.1"
          - "6.5.2"
          - "6.5.3"
          - "6.6.0"
          - "6.7.0"
          - "6.7.1"
          - "6.7.3"
          - "6.7.4"
          - "6.7.5"
          - "6.7.6"
          - "6.7.7"
          - "6.7.8"
          - "6.7.9"
          - "latest"
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v3
      - name: Add intel RPM repo
        run: |
          tee > /tmp/oneAPI.repo << EOF
          [oneAPI]
          name=IntelÂ® oneAPI repository
          baseurl=https://yum.repos.intel.com/oneapi
          enabled=1
          gpgcheck=1
          repo_gpgcheck=1
          gpgkey=https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          EOF
          mv /tmp/oneAPI.repo /etc/yum.repos.d
      - name: General update
        run: dnf update -y --refresh
      - name: Install environment-modules
        run: dnf install -y environment-modules
      - name: Install prerequisites
        run: dnf install -y git gcc kmod openssl-devel rpmdevtools make
      - name: Install fedora libxcrypt-compat
        run: dnf install -y libxcrypt-compat || true
      - name: Install fedora procps
        run: dnf install -y procps || true
      - run: dnf install -y intel-oneapi-mpi-devel intel-oneapi-mkl-devel intel-oneapi-compiler-fortran intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic openmpi-devel
      - run: /opt/intel/oneapi/modulefiles-setup.sh
      - name: Build RPM
        run: |
          mkdir -p fds/build/${{ matrix.fds-version }}
          cd fds/build/${{ matrix.fds-version }}
          pwd
          ls
          ls ../../
          if [ "${{ matrix.container }}" = "rockylinux:8" ]
          then
            bash ../../makerpm.sh --define 'build_openmpi 0'
          else
            bash ../../makerpm.sh
          fi
      - uses: actions/upload-artifact@v3
        with:
          name: FDS-RPMs
          path: |
            dist/*.rpm
  build-deb:
    name: Build deb
    if: false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fds-version:
          - "5.5.3"
          - "6.1.2"
          - "6.2.0"
          - "6.3.0"
          - "6.3.1"
          - "6.3.2"
          - "6.4.0"
          - "6.5.0"
          - "6.5.1"
          - "6.5.2"
          - "6.5.3"
          - "6.6.0"
          - "6.7.0"
          - "6.7.1"
          - "6.7.3"
          - "6.7.4"
          - "6.7.5"
          - "6.7.6"
          - "6.7.7"
          - "6.7.8"
          - "6.7.9"
          - "latest"
    steps:
      - uses: actions/checkout@v3
      - name: Add intel apt repo
        run: |
          wget -qO- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | sudo tee /etc/apt/trusted.gpg.d/intel-oneapi.asc
          sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
          sudo apt-get update
      - name: Install prerequisites
        run: sudo apt-get install -y git gcc openssl make devscripts debhelper
      - run: sudo apt-get install -y intel-oneapi-mpi intel-oneapi-mkl intel-oneapi-compiler-fortran
      - name: Build deb
        run: |
          cd ${{ matrix.fds-version }}/deb
          bash build_debian.sh
      - uses: actions/upload-artifact@v3
        with:
          name: FDS-DEBs
          path: |
            ${{ matrix.fds-version }}/deb/*.deb
