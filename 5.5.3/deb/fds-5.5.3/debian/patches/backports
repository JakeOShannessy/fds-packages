Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 fds (5.5.3-1) focal; urgency=low
 .
   * Initial packaging release
Author: Jake O'Shannessy <joshannessy@smokecloud.io>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: 2022-02-20

--- fds-5.5.3.orig/FDS_Compilation/makefile
+++ fds-5.5.3/FDS_Compilation/makefile
@@ -126,72 +126,72 @@ mpi_intel_win_64 : setup_win $(objwinf_m
 
 # Intel Compiler for Linux, version 11
 
-intel_linux_32 : FFLAGS = -m32 -O3 -static -vec_report0
-intel_linux_32 : CFLAGS = -m32 -O -Dpp_noappend -vec_report0
+intel_linux_32 : FFLAGS = -m32 -O3 -static
+intel_linux_32 : CFLAGS = -m32 -O -Dpp_noappend
 intel_linux_32 : FCOMPL = ifort
 intel_linux_32 : CCOMPL = icc
 intel_linux_32 : obj = fds5_intel_linux_32
 intel_linux_32 : setup $(obj_serial)
 	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)
 
-intel_linux_32_profile : FFLAGS = -m32 -O2 -static -vec_report0 -p
-intel_linux_32_profile : CFLAGS = -m32 -O2 -Dpp_noappend -vec_report0 -p
+intel_linux_32_profile : FFLAGS = -m32 -O2 -static -p
+intel_linux_32_profile : CFLAGS = -m32 -O2 -Dpp_noappend -p
 intel_linux_32_profile : FCOMPL = ifort
 intel_linux_32_profile : CCOMPL = icc
 intel_linux_32_profile : obj = fds5_intel_linux_32_profile
 intel_linux_32_profile : setup $(obj_serial)
 	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)
 
-intel_linux_64 : FFLAGS = -m64 -O3 -static -vec_report0
-intel_linux_64 : CFLAGS = -m64 -O -Dpp_noappend -vec_report0
+intel_linux_64 : FFLAGS = -m64 -O3 -static
+intel_linux_64 : CFLAGS = -m64 -O -Dpp_noappend
 intel_linux_64 : FCOMPL = ifort
 intel_linux_64 : CCOMPL = icc
 intel_linux_64 : obj = fds5_intel_linux_64
 intel_linux_64 : setup $(obj_serial)
 	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)
 
-mpi_intel_linux_32 : FFLAGS = -m32 -O3 -vec_report0
-mpi_intel_linux_32 : CFLAGS = -m32 -O -Dpp_noappend -vec_report0
+mpi_intel_linux_32 : FFLAGS = -m32 -O3
+mpi_intel_linux_32 : CFLAGS = -m32 -O -Dpp_noappend
 mpi_intel_linux_32 : FCOMPL = mpif77
 mpi_intel_linux_32 : CCOMPL = icc
 mpi_intel_linux_32 : obj = fds5_mpi_intel_linux_32
 mpi_intel_linux_32 : setup $(obj_mpi)
 	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_mpi)
 
-mpi_intel_linux_64 : FFLAGS = -m64 -O3 -vec_report0
-mpi_intel_linux_64 : CFLAGS = -m64 -O -Dpp_noappend -vec_report0
+mpi_intel_linux_64 : FFLAGS = -m64 -O3
+mpi_intel_linux_64 : CFLAGS = -m64 -O -Dpp_noappend
 mpi_intel_linux_64 : FCOMPL = mpif77
 mpi_intel_linux_64 : CCOMPL = icc
 mpi_intel_linux_64 : obj = fds5_mpi_intel_linux_64
 mpi_intel_linux_64 : setup $(obj_mpi)
 	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_mpi)
 
-intel_linux_32_db : FFLAGS = -m32 -check all -warn unused -O0 -auto -WB -traceback -g -fpe0 -fltconsistency -static -vec_report0 -ftrapuv -debug full
-intel_linux_32_db : CFLAGS = -m32 -Dpp_noappend -vec_report0
+intel_linux_32_db : FFLAGS = -m32 -check all -warn unused -O0 -auto -WB -traceback -g -fpe0 -fltconsistency -static -ftrapuv -debug full
+intel_linux_32_db : CFLAGS = -m32 -Dpp_noappend
 intel_linux_32_db : FCOMPL = ifort
 intel_linux_32_db : CCOMPL = icc
 intel_linux_32_db : obj = fds5_intel_linux_32_db
 intel_linux_32_db : setup $(obj_serial)
 	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)
 
-intel_linux_64_db : FFLAGS = -m64 -check -warn unused -O0 -auto -WB -traceback -g -fpe0 -fltconsistency -static -vec_report0
-intel_linux_64_db : CFLAGS = -m64 -Dpp_noappend -vec_report0
+intel_linux_64_db : FFLAGS = -m64 -check -warn unused -O0 -auto -WB -traceback -g -fpe0 -fltconsistency -static
+intel_linux_64_db : CFLAGS = -m64 -Dpp_noappend
 intel_linux_64_db : FCOMPL = ifort
 intel_linux_64_db : CCOMPL = icc
 intel_linux_64_db : obj = fds5_intel_linux_64_db
 intel_linux_64_db : setup $(obj_serial)
 	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_serial)
 
-mpi_intel_linux_32_db : FFLAGS = -m32 -check -warn unused -O0 -auto -WB -traceback -g -fpe0 -fltconsistency  -vec_report0
-mpi_intel_linux_32_db : CFLAGS = -m32 -Dpp_noappend -vec_report0
+mpi_intel_linux_32_db : FFLAGS = -m32 -check -warn unused -O0 -auto -WB -traceback -g -fpe0 -fltconsistency
+mpi_intel_linux_32_db : CFLAGS = -m32 -Dpp_noappend
 mpi_intel_linux_32_db : FCOMPL = mpif77
 mpi_intel_linux_32_db : CCOMPL = icc
 mpi_intel_linux_32_db : obj = fds5_mpi_intel_linux_32_db
 mpi_intel_linux_32_db : setup $(obj_mpi)
 	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_mpi)
 
-mpi_intel_linux_64_db : FFLAGS = -m64 -check -warn unused -O0 -auto -WB -traceback -g -fpe0 -fltconsistency -vec_report0
-mpi_intel_linux_64_db : CFLAGS = -m64 -O -Dpp_noappend -vec_report0
+mpi_intel_linux_64_db : FFLAGS = -m64 -check -warn unused -O0 -auto -WB -traceback -g -fpe0 -fltconsistency
+mpi_intel_linux_64_db : CFLAGS = -m64 -O -Dpp_noappend
 mpi_intel_linux_64_db : FCOMPL = mpif77
 mpi_intel_linux_64_db : CCOMPL = icc
 mpi_intel_linux_64_db : obj = fds5_mpi_intel_linux_64_db
@@ -199,31 +199,31 @@ mpi_intel_linux_64_db : setup $(obj_mpi)
 	$(FCOMPL) $(FFLAGS) -o $(obj) $(obj_mpi)
 
 # 32 bit
-intel_osx_32 : FFLAGS = -O3  -m32 -axSSSE3 -heap-arrays -static-intel -vec_report0
-intel_osx_32 : CFLAGS = -O3 -m32 -Dpp_noappend -Dpp_OSX -vec_report0
+intel_osx_32 : FFLAGS = -O3  -m32 -axSSSE3 -heap-arrays -static-intel
+intel_osx_32 : CFLAGS = -O3 -m32 -Dpp_noappend -Dpp_OSX
 intel_osx_32 : FCOMPL = ifort
 intel_osx_32 : CCOMPL = icc
 intel_osx_32 : obj = fds5_intel_osx_32
 intel_osx_32 : setup $(obj_serial)
 	$(FCOMPL) $(FFLAGS) -mmacosx-version-min=10.4 -o $(obj) $(obj_serial)
 
-mpi_intel_osx_32 : FFLAGS  = -O3 -m32 -axSSSE3 -heap-arrays -static-intel -L/opt/openmpi32/lib -vec_report0
-mpi_intel_osx_32 : CFLAGS  = -O3 -m32 -Dpp_noappend -Dpp_OSX -vec_report0
+mpi_intel_osx_32 : FFLAGS  = -O3 -m32 -axSSSE3 -heap-arrays -static-intel -L/opt/openmpi32/lib
+mpi_intel_osx_32 : CFLAGS  = -O3 -m32 -Dpp_noappend -Dpp_OSX
 mpi_intel_osx_32 : FCOMPL  = /opt/openmpi32/bin/mpif77
 mpi_intel_osx_32 : CCOMPL  = icc
 mpi_intel_osx_32 : obj = fds5_mpi_intel_osx_32
 mpi_intel_osx_32 : setup $(obj_mpi)
 	$(FCOMPL) $(FFLAGS) -mmacosx-version-min=10.4 -o $(obj) $(obj_mpi)
 
-intel_osx_32_db : FFLAGS = -check -warn unused -O0 -m32 -g -traceback -fpe:0 -fltconsistency -FR -WB -vec_report0
-intel_osx_32_db : CFLAGS = -O0 -m32 -g -traceback -Dpp_noappend -Dpp_OSX -vec_report0
+intel_osx_32_db : FFLAGS = -check -warn unused -O0 -m32 -g -traceback -fpe:0 -fltconsistency -FR -WB
+intel_osx_32_db : CFLAGS = -O0 -m32 -g -traceback -Dpp_noappend -Dpp_OSX
 intel_osx_32_db : FCOMPL = ifort
 intel_osx_32_db : CCOMPL = icc
 intel_osx_32_db : obj = fds5_intel_osx_32_db
 intel_osx_32_db : setup $(obj_serial)
 	$(FCOMPL) $(FFLAGS) -mmacosx-version-min=10.4 -o $(obj) $(obj_serial)
 
-intel_osx_mpi_32_db : FFLAGS  = -check -warn unused -O0 -m32 -g -traceback -fpe:0 -vec_report0
+intel_osx_mpi_32_db : FFLAGS  = -check -warn unused -O0 -m32 -g -traceback -fpe:0
 intel_osx_mpi_32_db : CFLAGS  = -O0 -m32 -g -traceback -Dpp_noappend -Dpp_OSX
 intel_osx_mpi_32_db : FCOMPL  = /opt/openmpi32/bin/mpif77
 intel_osx_mpi_32_db : CCOMPL  = icc
@@ -233,31 +233,31 @@ intel_osx_mpi_32_db : setup $(obj_mpi)
 
 # 64 bit
 intel_osx_64 : FFLAGS = -O3 -m64 -heap-arrays -axSSSE3 -static-intel
-intel_osx_64 : CFLAGS = -O3 -m64 -Dpp_noappend -Dpp_OSX -vec_report0
+intel_osx_64 : CFLAGS = -O3 -m64 -Dpp_noappend -Dpp_OSX
 intel_osx_64 : FCOMPL = ifort
 intel_osx_64 : CCOMPL = icc
 intel_osx_64 : obj = fds5_intel_osx_64
 intel_osx_64 : setup $(obj_serial)
 	$(FCOMPL) $(FFLAGS) -mmacosx-version-min=10.4 -o $(obj) $(obj_serial)
 
-mpi_intel_osx_64 : FFLAGS  = -O3 -m64 -heap-arrays -axSSSE3 -static-intel -L/opt/openmpi64/lib -vec_report0
-mpi_intel_osx_64 : CFLAGS  = -O3 -m64 -Dpp_noappend -Dpp_OSX -vec_report0
+mpi_intel_osx_64 : FFLAGS  = -O3 -m64 -heap-arrays -axSSSE3 -static-intel -L/opt/openmpi64/lib
+mpi_intel_osx_64 : CFLAGS  = -O3 -m64 -Dpp_noappend -Dpp_OSX
 mpi_intel_osx_64 : FCOMPL  = /opt/openmpi64/bin/mpif77
 mpi_intel_osx_64 : CCOMPL  = icc
 mpi_intel_osx_64 : obj = fds5_mpi_intel_osx_64
 mpi_intel_osx_64 : setup $(obj_mpi)
 	$(FCOMPL) $(FFLAGS) -mmacosx-version-min=10.4 -o $(obj) $(obj_mpi)
 
-intel_osx_64_db : FFLAGS = -check -warn unused -O0 -m64 -g -traceback -save-temps -fpe:0 -fltconsistency -fp-stack-check -FR -WB -vec_report0
-intel_osx_64_db : CFLAGS = -O0 -g -traceback -m64 -Dpp_noappend -Dpp_OSX -vec_report0
+intel_osx_64_db : FFLAGS = -check -warn unused -O0 -m64 -g -traceback -save-temps -fpe:0 -fltconsistency -fp-stack-check -FR -WB
+intel_osx_64_db : CFLAGS = -O0 -g -traceback -m64 -Dpp_noappend -Dpp_OSX
 intel_osx_64_db : FCOMPL = ifort
 intel_osx_64_db : CCOMPL = icc
 intel_osx_64_db : obj = fds5_intel_osx_64_db
 intel_osx_64_db : setup $(obj_serial)
 	$(FCOMPL) $(FFLAGS) -mmacosx-version-min=10.4 -o $(obj) $(obj_serial)
 
-intel_osx_mpi_64_db : FFLAGS  = -check -warn unused -O0 -g -traceback -m64 -fpe:0 -fp-stack-check -save-temps -vec_report0
-intel_osx_mpi_64_db : CFLAGS  = -O0 -g -traceback -m64 -Dpp_noappend -Dpp_OSX -vec_report0
+intel_osx_mpi_64_db : FFLAGS  = -check -warn unused -O0 -g -traceback -m64 -fpe:0 -fp-stack-check -save-temps
+intel_osx_mpi_64_db : CFLAGS  = -O0 -g -traceback -m64 -Dpp_noappend -Dpp_OSX
 intel_osx_mpi_64_db : FCOMPL  = /opt/openmpi64/bin/mpif77
 intel_osx_mpi_64_db : CCOMPL  = icc
 intel_osx_mpi_64_db : obj = fds5_mpi_intel_osx_64_db
