Description: Add backports for OneAPI
 Make minor to the changes to code to adapt to newer compilers.
Author: Jake O'Shannessy <joshannessy@smokecloud.io>
---
--- fds-6.1.2.orig/FDS_Source/main.f90
+++ fds-6.1.2/FDS_Source/main.f90
@@ -1362,8 +1362,6 @@ ELSE
    STOP_STATUS = PROCESS_STOP_STATUS
 ENDIF

-CALL MPI_FINALIZE(IERR)
-
 IF (MYID==0) THEN
    SELECT CASE(STOP_STATUS)
       CASE(NO_STOP)
@@ -1385,6 +1383,10 @@ IF (MYID==0) THEN
    IF (OPN) WRITE(LU_OUTPUT,'(/A,A,A,A)') TRIM(MESSAGE),' (CHID: ',TRIM(CHID),')'
 ENDIF

+IF (USE_MPI) THEN
+    CALL MPI_FINALIZE(IERR)
+ENDIF
+
 STOP

 END SUBROUTINE END_FDS
--- fds-6.1.2.orig/FDS_Source/part.f90
+++ fds-6.1.2/FDS_Source/part.f90
@@ -2179,7 +2179,7 @@ SPECIES_LOOP: DO Z_INDEX = 1,N_TRACKED_S
    !$OMP         DENOM,TMP_DROP_NEW,Q_RAD,Q_CON_GAS,Q_CON_WALL,Q_TOT,Q_FRAC,M_VAP,TMP_G_I,RAYLEIGH,GR,&
    !$OMP         TEMPITER,ITCOUNT,DCPDT,H_G_OLD,M_GAS_NEW,H_NEW,X_EQUIL,Y_EQUIL,UBAR,VBAR,WBAR,&
    !$OMP         MOMENTUM_SINK_FACTOR,SS,Z_INDEX,MVAP_TOT,CPOPR,NU_FAC_GAS,SH_FAC_GAS,H_S,DELTA_H_G,RSUM, &
-   !$OMP         CP2,ZZ_GET2,TMP_G_NEW,CP,M_DOT,ITMP2,QREL,IIX,JJY,KKZ,XI,YJ,ZK,C_DROP2,VEL,Y_ALL,H_L_REF,H_S_B,
+   !$OMP         CP2,ZZ_GET2,TMP_G_NEW,CP,M_DOT,ITMP2,QREL,IIX,JJY,KKZ,XI,YJ,ZK,C_DROP2,VEL,Y_ALL,H_L_REF,H_S_B, &
    !$OMP         I_BOIL,P_RATIO,T_BOIL_EFF,MESSAGE,PR_LIQUID,K_LIQUID,NU_LIQUID)
    PARTICLE_LOOP: DO IP=1,NLP

--- fds-6.1.2.orig/FDS_Source/smvv.f90
+++ fds-6.1.2/FDS_Source/smvv.f90
@@ -839,7 +839,7 @@ SUBROUTINE SMOKE3D_TO_FILE(LU_SMOKE3D,LU
   REAL(FB), INTENT(IN) :: HRRPUV_MAX_SMV

   INTEGER, PARAMETER :: SOOT=1, FIRE=2, OTHER=3
-  CHARACTER(LEN=1), DIMENSION(:), POINTER :: BUFFER_IN, BUFFER_OUT
+  CHARACTER(LEN=1), DIMENSION(:), ALLOCATABLE :: BUFFER_IN, BUFFER_OUT
   INTEGER :: NCHARS_IN
   REAL(FB) :: FACTOR,VAL
   REAL(FB) :: CUTMAX
@@ -903,7 +903,7 @@ SUBROUTINE RLE(BUFFER_IN, NCHARS_IN, BUF

   INTEGER, INTENT(IN) :: NCHARS_IN
   CHARACTER(LEN=1), INTENT(IN), DIMENSION(NCHARS_IN) :: BUFFER_IN
-  CHARACTER(LEN=1), INTENT(OUT), DIMENSION(:), POINTER :: BUFFER_OUT
+  CHARACTER(LEN=1), INTENT(OUT), DIMENSION(:) :: BUFFER_OUT
   INTEGER, INTENT(OUT) :: NCHARS_OUT

   CHARACTER(LEN=1) :: MARK=CHAR(255),THISCHAR,LASTCHAR
